[{"D:\\Repositories\\KarlsApp\\karlsapp\\src\\index.js":"1","D:\\Repositories\\KarlsApp\\karlsapp\\src\\App.js":"2","D:\\Repositories\\KarlsApp\\karlsapp\\src\\reportWebVitals.js":"3","D:\\Repositories\\KarlsApp\\karlsapp\\src\\Sidebar.js":"4","D:\\Repositories\\KarlsApp\\karlsapp\\src\\SidebarChat.js":"5","D:\\Repositories\\KarlsApp\\karlsapp\\src\\Chat.js":"6","D:\\Repositories\\KarlsApp\\karlsapp\\src\\firebase.js":"7","D:\\Repositories\\KarlsApp\\karlsapp\\src\\Login.js":"8","D:\\Repositories\\KarlsApp\\karlsapp\\src\\StateProvider.js":"9","D:\\Repositories\\KarlsApp\\karlsapp\\src\\reducer.js":"10"},{"size":690,"mtime":1612230430749,"results":"11","hashOfConfig":"12"},{"size":825,"mtime":1612231147109,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2148,"mtime":1612281221792,"results":"15","hashOfConfig":"12"},{"size":1569,"mtime":1612301074648,"results":"16","hashOfConfig":"12"},{"size":3643,"mtime":1612298871827,"results":"17","hashOfConfig":"12"},{"size":680,"mtime":1612207633796,"results":"18","hashOfConfig":"12"},{"size":1091,"mtime":1612232036539,"results":"19","hashOfConfig":"12"},{"size":425,"mtime":1612229985126,"results":"20","hashOfConfig":"12"},{"size":437,"mtime":1612298339011,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nt27ea",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Repositories\\KarlsApp\\karlsapp\\src\\index.js",[],["47","48"],"D:\\Repositories\\KarlsApp\\karlsapp\\src\\App.js",["49"],"import React from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    // BEM naming comvention\n    <div className=\"App\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app_body\">\n       \n        <Router>\n        <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n             \n             <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Chat />\n            </Route>\n           \n         </Switch>\n       </Router>\n      </div>\n      )}\n    \n    </div>\n  );\n}\n\nexport default App;\n","D:\\Repositories\\KarlsApp\\karlsapp\\src\\reportWebVitals.js",[],"D:\\Repositories\\KarlsApp\\karlsapp\\src\\Sidebar.js",["50"],"import React, { useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport './Sidebar.css';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n       const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data:doc.data(),\r\n            })\r\n            ))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n        \r\n    }, []);\r\n\r\n        return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                    <MoreVertIcon />  \r\n                    </IconButton>\r\n                 \r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or Start new Chat\" type=\"text\"/>\r\n                </div>\r\n            \r\n            </div>\r\n            \r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar","D:\\Repositories\\KarlsApp\\karlsapp\\src\\SidebarChat.js",[],"D:\\Repositories\\KarlsApp\\karlsapp\\src\\Chat.js",["51","52"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, SearchOutlined } from '@material-ui/icons';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport React, {useEffect, useState} from 'react';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport \"./Chat.css\"\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue([]);\r\n\r\n    useEffect(() => {\r\n       if(roomId){\r\n           db.collection('rooms')\r\n           .doc(roomId)\r\n           .onSnapshot((snapshot) => setRoomName\r\n           (snapshot.data().name));\r\n\r\n           db.collection('rooms')\r\n           .doc(roomId).collection('messages')\r\n           .orderBy('timestamp', 'asc')\r\n           .onSnapshot((snapshot) =>\r\n               setMessages(snapshot.docs.map((doc) => doc.data()))\r\n           );\r\n       }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, []);\r\n\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"typed: \", input);\r\n\r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n             <div className=\"chat_header\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/bottts/${Math.floor(Math.random()*5000)}.svg`}/>\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>The Last Seen{\" \"}\r\n                    {new Date(\r\n                        messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat_body\">\r\n                {messages.map(message =>(\r\n                    <p className={`chat_message ${message.name === user.displayName && \"chat_reviever\"}`}>\r\n                    <span className=\"chat_name\">{message.name}</span>\r\n                    {message.message}\r\n                    <span className=\"chat_timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                </p>\r\n                ))}\r\n                \r\n\r\n                \r\n                \r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                   <input type=\"text\" placeholder=\"Type a message\" value={input} onChange={e => setInput(e.target.value)}/> \r\n                    <button type=\"submit\" onClick={sendMessage}>Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\Repositories\\KarlsApp\\karlsapp\\src\\firebase.js",[],"D:\\Repositories\\KarlsApp\\karlsapp\\src\\Login.js",["53"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport './Login.css';\r\nimport { auth, provider } from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) =>  {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n    <div className=\"login\">\r\n        <div className=\"login_container\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\" /> \r\n            <div className=\"login_text\">\r\n                <h1>Sign In to WhatsApp</h1>\r\n            </div>\r\n            <Button onClick={signIn}>\r\n                SIGN IN WITH GOOGLE\r\n            </Button>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Repositories\\KarlsApp\\karlsapp\\src\\StateProvider.js",[],"D:\\Repositories\\KarlsApp\\karlsapp\\src\\reducer.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":20,"nodeType":"60","messageId":"61","endLine":10,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":14,"column":22,"nodeType":"60","messageId":"61","endLine":14,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":19,"column":22,"nodeType":"60","messageId":"61","endLine":19,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'seed' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]